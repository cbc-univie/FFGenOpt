import psi4
import numpy as np
import sys

outfile = 'im1h_normalmodes.out'
psi4.core.set_output_file(outfile, False)

inp_mol = psi4.geometry("""
1 1
 C  2.1575577521       -0.0082335898        0.0189034398
 N  0.6782820682       -0.0066896978        0.1076993610
 C -0.1386795229        1.1451645371        0.0155189714
 C -1.5025755912        0.7098629837        0.0243259362
 N -1.4668403704       -0.6949401030        0.0437478295
 H -2.2935661956       -1.2446206891       -0.0864322517
 C -0.1549649677       -1.0963515121       -0.0807288230
 H  2.4669093048        0.2626450988       -1.0151541104
 H  2.5519006640       -1.0170914791        0.2739111598
 H  2.5691189920        0.7355002573        0.7371109846
 H  0.1904398188        2.1793095930        0.0178790836
 H -2.3801102419        1.3491060987        0.0402588261
 H  0.1813055220       -2.1306540467       -0.2239984057
""")

scf_e, scf_wfn = psi4.optimize('scf/cc-pvdz', molecule=inp_mol, return_wfn = True)
hess, wfn = psi4.driver.hessian('scf/cc-pvdz', return_wfn = True)
hess_arr = np.asarray(hess)
geom = np.asarray(inp_mol.geometry())
masses = np.asarray([inp_mol.mass(i) for i in range(inp_mol.natom())])
ir_labels = inp_mol.irrep_labels()
basis = wfn.basisset()
symbols = [inp_mol.symbol(at) for at in range(inp_mol.natom())]

vibinfo, vibtext = psi4.driver.qcdb.vib.harmonic_analysis(hess_arr, geom, masses, basis, ir_labels)

#psi4.driver.vibanal_wfn(wfn)
with open(outfile, 'a') as f:
    print(psi4.driver.qcdb.vib.print_vibs(vibinfo, normco='q', ncprec=5, atom_lbl=symbols), file=f)
