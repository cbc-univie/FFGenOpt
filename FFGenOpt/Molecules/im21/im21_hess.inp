import psi4
import numpy as np
import sys

outfile = 'im21_normalmodes.out'
psi4.core.set_output_file(outfile, False)

inp_mol = psi4.geometry("""
1 1
 C   2.8801678199       -0.6571967031        0.2232646721
 H   3.2408019585       -0.3711991439        1.2152035888
 H   2.8723084720       -1.7476245534        0.1434450845
 H   3.5480010307       -0.2441755695       -0.5377218945
 N  -0.6085162270        0.0312534419       -0.3086904758
 C   0.4023775963       -0.8763448821       -0.2280256419
 N   1.5319430060       -0.1320639753        0.0270512413
 C   1.1715001038        1.2055804504        0.0781124382
 C  -0.1842711279        1.3148277730       -0.1384490122
 H   0.3315141184       -1.9494931751       -0.3264836916
 H   1.9149607915        1.9752777140        0.2666318781
 H  -0.8533619420        2.1696534425       -0.1794792249
 C  -2.0047302405       -0.3317061405       -0.5548975808
 H  -2.0480452777       -1.3475480460       -0.9582964304
 H  -2.4170113714        0.3455423656       -1.3089772422
 C  -2.8738135330       -0.2576917593        0.7145299144
 H  -2.4837045453       -0.9240583269        1.4876704648
 H  -2.8932596984        0.7597126414        1.1125219797
 H  -3.9001377527       -0.5572625851        0.4901127322
""")

scf_e, scf_wfn = psi4.optimize('scf/cc-pvdz', molecule=inp_mol, return_wfn = True)
hess, wfn = psi4.driver.hessian('scf/cc-pvdz', return_wfn = True)
hess_arr = np.asarray(hess)
geom = np.asarray(inp_mol.geometry())
masses = np.asarray([inp_mol.mass(i) for i in range(inp_mol.natom())])
ir_labels = inp_mol.irrep_labels()
basis = wfn.basisset()
symbols = [inp_mol.symbol(at) for at in range(inp_mol.natom())]

vibinfo, vibtext = psi4.driver.qcdb.vib.harmonic_analysis(hess_arr, geom, masses, basis, ir_labels)

#psi4.driver.vibanal_wfn(wfn)
with open(outfile, 'a') as f:
    print(psi4.driver.qcdb.vib.print_vibs(vibinfo, normco='q', ncprec=5, atom_lbl=symbols), file=f)
