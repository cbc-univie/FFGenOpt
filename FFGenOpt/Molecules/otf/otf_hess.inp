import psi4
import numpy as np
import sys

outfile = 'otf_normalmodes.out'
psi4.core.set_output_file(outfile, False)

inp_mol = psi4.geometry("""
-1 1
 C -0.4333484285        0.8564976458       -0.0000000000
 F -1.7825209317        0.7524193218        0.0000000000
 F -0.1089720986        1.5995582084        1.0829044936
 F -0.1089720986        1.5995582084       -1.0829044936
 S  0.3944073582       -0.7741195218        0.0000000000
 O  1.8120149296       -0.5425532496        0.0000000000
 O -0.0241610227       -1.4733642431        1.1904587445
 O -0.0241610227       -1.4733642431       -1.1904587445
""")

scf_e, scf_wfn = psi4.optimize('scf/cc-pvdz', molecule=inp_mol, return_wfn = True)
hess, wfn = psi4.driver.hessian('scf/cc-pvdz', return_wfn = True)
hess_arr = np.asarray(hess)
geom = np.asarray(inp_mol.geometry())
masses = np.asarray([inp_mol.mass(i) for i in range(inp_mol.natom())])
ir_labels = inp_mol.irrep_labels()
basis = wfn.basisset()
symbols = [inp_mol.symbol(at) for at in range(inp_mol.natom())]

vibinfo, vibtext = psi4.driver.qcdb.vib.harmonic_analysis(hess_arr, geom, masses, basis, ir_labels)

#psi4.driver.vibanal_wfn(wfn)
with open(outfile, 'a') as f:
    print(psi4.driver.qcdb.vib.print_vibs(vibinfo, normco='q', ncprec=5, atom_lbl=symbols), file=f)

with open("otf.molden", 'w') as handle:
    handle.write(psi4.driver.qcdb.vib.print_molden_vibs(vibinfo, symbols, geom, standalone=True))

