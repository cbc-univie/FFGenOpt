import psi4
import numpy as np
import sys

outfile = 'im1_normalmodes.out'
psi4.core.set_output_file(outfile, False)

inp_mol = psi4.geometry("""
0 1
 N     0.5931853112       -0.0097645034        0.0000007421
 C    -0.1767291838       -1.1953340229       -0.0000037802
 N    -1.4970214925       -0.8101584045       -0.0000008893
 C    -1.5202702560        0.6275898039        0.0000020130
 C    -0.1516478432        1.1779424422        0.0000003815
 C     2.0229279586        0.0442527432        0.0000011258
 H     0.2249782725       -2.2071098614       -0.0000080000
 H    -2.4110694659        1.2471152377        0.0000049774
 H     0.2305403656        2.1905800403        0.0000001309
 H     2.3638394239        0.5839914850       -0.9100784853
 H     2.4440302996       -0.9838790358        0.0000104921
 H     2.3638388238        0.5840072204        0.9100716720
""")

scf_e, scf_wfn = psi4.optimize('scf/cc-pvdz', molecule=inp_mol, return_wfn = True)
hess, wfn = psi4.driver.hessian('scf/cc-pvdz', return_wfn = True)
hess_arr = np.asarray(hess)
geom = np.asarray(inp_mol.geometry())
masses = np.asarray([inp_mol.mass(i) for i in range(inp_mol.natom())])
ir_labels = inp_mol.irrep_labels()
basis = wfn.basisset()
symbols = [inp_mol.symbol(at) for at in range(inp_mol.natom())]

vibinfo, vibtext = psi4.driver.qcdb.vib.harmonic_analysis(hess_arr, geom, masses, basis, ir_labels)

#psi4.driver.vibanal_wfn(wfn)
with open(outfile, 'a') as f:
    print(psi4.driver.qcdb.vib.print_vibs(vibinfo, normco='q', ncprec=5, atom_lbl=symbols), file=f)
